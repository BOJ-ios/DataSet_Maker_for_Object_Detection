// Generated by view binder compiler. Do not edit!
package org.tensorflow.lite.examples.objectdetection.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.tensorflow.lite.examples.objectdetection.R;

public final class ActivityShowPhotosBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageButton addPhotoButton;

  @NonNull
  public final TextView classNameTextView;

  @NonNull
  public final TextView imagesCounter;

  @NonNull
  public final TextView itemTopic;

  @NonNull
  public final ImageButton nextImagButtone;

  @NonNull
  public final ImageButton previousImageButton;

  @NonNull
  public final ImageView topicClassImageView;

  @NonNull
  public final ImageView topicImageView;

  private ActivityShowPhotosBinding(@NonNull RelativeLayout rootView,
      @NonNull ImageButton addPhotoButton, @NonNull TextView classNameTextView,
      @NonNull TextView imagesCounter, @NonNull TextView itemTopic,
      @NonNull ImageButton nextImagButtone, @NonNull ImageButton previousImageButton,
      @NonNull ImageView topicClassImageView, @NonNull ImageView topicImageView) {
    this.rootView = rootView;
    this.addPhotoButton = addPhotoButton;
    this.classNameTextView = classNameTextView;
    this.imagesCounter = imagesCounter;
    this.itemTopic = itemTopic;
    this.nextImagButtone = nextImagButtone;
    this.previousImageButton = previousImageButton;
    this.topicClassImageView = topicClassImageView;
    this.topicImageView = topicImageView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityShowPhotosBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityShowPhotosBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_show_photos, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityShowPhotosBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_photo_button;
      ImageButton addPhotoButton = ViewBindings.findChildViewById(rootView, id);
      if (addPhotoButton == null) {
        break missingId;
      }

      id = R.id.classNameTextView;
      TextView classNameTextView = ViewBindings.findChildViewById(rootView, id);
      if (classNameTextView == null) {
        break missingId;
      }

      id = R.id.imagesCounter;
      TextView imagesCounter = ViewBindings.findChildViewById(rootView, id);
      if (imagesCounter == null) {
        break missingId;
      }

      id = R.id.item_topic;
      TextView itemTopic = ViewBindings.findChildViewById(rootView, id);
      if (itemTopic == null) {
        break missingId;
      }

      id = R.id.next_imag_buttone;
      ImageButton nextImagButtone = ViewBindings.findChildViewById(rootView, id);
      if (nextImagButtone == null) {
        break missingId;
      }

      id = R.id.previous_image_button;
      ImageButton previousImageButton = ViewBindings.findChildViewById(rootView, id);
      if (previousImageButton == null) {
        break missingId;
      }

      id = R.id.topicClassImageView;
      ImageView topicClassImageView = ViewBindings.findChildViewById(rootView, id);
      if (topicClassImageView == null) {
        break missingId;
      }

      id = R.id.topicImageView;
      ImageView topicImageView = ViewBindings.findChildViewById(rootView, id);
      if (topicImageView == null) {
        break missingId;
      }

      return new ActivityShowPhotosBinding((RelativeLayout) rootView, addPhotoButton,
          classNameTextView, imagesCounter, itemTopic, nextImagButtone, previousImageButton,
          topicClassImageView, topicImageView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
